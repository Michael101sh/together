{"version":3,"file":"bootstrap-vue.esm.js","sources":["../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/components/alert.vue","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/mixins/clickout.js","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/modal.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/pagination.vue","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["/**\r\n * Observe a DOM element changes, falls back to eventListener mode\r\n * @param {Element} el The DOM element to observe\r\n * @param {Function} callback callback to be called on change\r\n * @param {object} [opts={childList: true, subtree: true}] observe options\r\n * @see http://stackoverflow.com/questions/3219758\r\n */\r\nexport default function observeDOM(el, callback, opts) {\r\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n    const eventListenerSupported = window.addEventListener;\r\n\r\n    if (MutationObserver) {\r\n        // Define a new observer\r\n        const obs = new MutationObserver(mutations => {\r\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n        // Have the observer observe foo for changes in children\r\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\r\n    } else if (eventListenerSupported) {\r\n        el.addEventListener('DOMNodeInserted', callback, false);\r\n        el.addEventListener('DOMNodeRemoved', callback, false);\r\n    }\r\n}\r\n","const all_listen_types = {hover: true, click: true, focus: true};\r\n\r\nexport default function targets(el, binding, listen_types, fn) {\r\n    const vm = el.__vue__;\r\n\r\n    if (!vm) {\r\n        console.warn('__vue__ is not available on element', el);\r\n        return;\r\n    }\r\n\r\n    const targets = Object.keys(binding.modifiers || {})\r\n        .filter(t => !all_listen_types[t]);\r\n\r\n    if (binding.value) {\r\n        targets.push(binding.value);\r\n    }\r\n\r\n    const listener = () => {\r\n        fn({targets, vm});\r\n    };\r\n\r\n    Object.keys(all_listen_types).forEach(type => {\r\n        if (listen_types[type] || binding.modifiers[type]) {\r\n            console.log(type);\r\n            el.addEventListener(type, listener);\r\n        }\r\n    });\r\n}\r\n","<template>\n    <div :class=\"classObject\" role=\"alert\" v-if=\"localShow\">\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"Close\"\n                v-if=\"dismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false\n            };\n        },\n        created() {\n            if (this.state) {\n                console.warn('<b-alrt> state property is deprecated, please use variant instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    return;\n                }\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","<template>\r\n    <a :is=\"componentType\" :active-class=\"activeClass\" :to=\"to\" :href=\"hrefString\" :exact=\"exact\" @click=\"click\">\r\n        <slot></slot>\r\n    </a>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            componentType() {\r\n                return (this.$router && this.to) ? 'router-link' : 'a';\r\n            },\r\n            hrefString() {\r\n                if (this.to) {\r\n                    return this.to.path || this.to;\r\n                }\r\n                return this.href;\r\n            }\r\n        },\r\n        props: {\r\n            activeClass: {\r\n                type: String,\r\n                default: 'active'\r\n            },\r\n            to: {\r\n                type: [String, Object],\r\n                default: null\r\n            },\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            },\r\n            exact: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            click(e) {\r\n                this.$emit('click', e);\r\n                this.$root.$emit('shown::dropdown', this);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"item in items2\" :class=\"['breadcrumb-item', item.__active ? 'active' : null]\"\n            @click=\"onclick(item)\">\n            <span v-if=\"item.active\" v-html=\"item.text\"></span>\n            <b-link v-else :to=\"item.to\" :href=\"item.href || item.link\" v-html=\"item.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    export default {\n        components: {bLink},\n        computed: {\n            componentType() {\n                return this.to ? 'router-link' : 'a';\n            },\n            items2() {\n                const last = this.items.length > 0 && this.items[this.items.length - 1];\n\n                return this.items.map(item => {\n                    if (typeof item === 'string') {\n                        return {text: item, link: '#', active: item === last};\n                    }\n\n                    if (item.active !== true && item.active !== false) {\n                        item.__active = item === last;\n                    } else {\n                        item.__active = item.active;\n                    }\n\n                    return item;\n                });\n            }\n        },\n        props: {\n            items: {\n                type: Array,\n                default: () => [],\n                required: true\n            }\n        },\n        methods: {\n            onclick(item) {\n                this.$emit('click', item);\n                if (this.$router && this.to) {\n                    this.$router.push(this.to);\n                }\n            }\n        }\n    };\n</script>\n","<template>\r\n    <button :class=\"classObject\"\r\n            :is=\"componentType\"\r\n            :to=\"to\"\r\n            :href=\"href\"\r\n            @click=\"onclick\"\r\n            :disabled=\"disabled\"\r\n    >\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn',\r\n                    this.btnVariant,\r\n                    this.btnSize,\r\n                    this.btnBlock,\r\n                    this.btnDisabled,\r\n                    this.inactive ? 'btn-inactive' : ''\r\n                ];\r\n            },\r\n            componentType() {\r\n                return (this.href || this.to) ? 'b-link' : 'button';\r\n            },\r\n            btnBlock() {\r\n                return this.block ? `btn-block` : '';\r\n            },\r\n            btnVariant() {\r\n                return this.variant ? `btn-${this.variant}` : `btn-secondary`;\r\n            },\r\n            btnSize() {\r\n                return this.size ? `btn-${this.size}` : '';\r\n            },\r\n            btnDisabled() {\r\n                return this.disabled ? 'disabled' : '';\r\n            }\r\n        },\r\n        props: {\r\n            block: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            inactive: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            role: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                this.$emit('click', e);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\" role=\"group\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn-' + (this.toolbar ? 'toolbar' : 'group'),\r\n                    this.vertical ? 'btn-group-vertical' : '',\r\n                    this.size ? ('btn-group-' + this.size) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            vertical: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            toolbar: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","\r\n<template>\r\n    <span class=\"input-group-addon\" :id=\"thisId\">\r\n        <slot></slot>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            thisId() {\r\n                return this.id || ('b_input_group_addon_' + this._uid);\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\">\r\n        <slot name=\"left\">\r\n            <b-input-group-addon v-if=\"left\" v-html=\"left\"></b-input-group-addon>\r\n        </slot>\r\n        <slot></slot>\r\n        <slot name=\"right\">\r\n            <b-input-group-addon v-if=\"right\" v-html=\"right\"></b-input-group-addon>\r\n        </slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import bInputGroupAddon from './input-group-addon.vue';\r\n\r\n    export default {\r\n        components: {bInputGroupAddon},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'input-group',\r\n                    this.size ? ('input-group-' + this.size) : '',\r\n                    this.state ? ('has-' + this.state) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            left: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            right: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-btn\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {}\r\n</script>\r\n","<template>\r\n    <div :class=\"['card',cardVariant,cardAlign,cardInverse]\">\r\n        <!-- Card Image Slot-->\r\n        <slot name=\"img\" ref=\"img\">\r\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\r\n        </slot>\r\n\r\n        <!-- Card Header-->\r\n        <component v-if=\"header || showHeader\" :is=\"headerTag\" class=\"card-header\">\r\n            <slot name=\"header\">\r\n                <div v-html=\"header\"></div>\r\n            </slot>\r\n        </component>\r\n\r\n        <!--Show custom block when no-block prop is set-->\r\n        <template v-if=\"noBlock\">\r\n            <slot></slot>\r\n        </template>\r\n\r\n        <!-- Card Standard Blocks-->\r\n        <div :class=\"blockClass\" v-else>\r\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\r\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Card Footer-->\r\n        <component v-if=\"footer || showFooter\" :is=\"footerTag\" class=\"card-footer\">\r\n            <slot name=\"footer\">\r\n                <div v-html=\"footer\"></div>\r\n            </slot>\r\n        </component>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            blockClass() {\r\n                return [\r\n                    'card-block',\r\n                    this.overlay ? 'card-img-overlay' : null\r\n                ];\r\n            },\r\n            cardVariant() {\r\n                return this.variant ? `card-${this.variant}` : null;\r\n            },\r\n            cardInverse() {\r\n                if (this.overlay || this.inverse) {\r\n                    return 'card-inverse';\r\n                }\r\n                // Auto inverse colored cards\r\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\r\n                    this.variant.indexOf('outline') === -1) {\r\n                    return 'card-inverse';\r\n                }\r\n            },\r\n            cardAlign() {\r\n                return this.align ? `text-${this.align}` : null;\r\n            }\r\n        },\r\n        props: {\r\n            align: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inverse: {\r\n                type: Boolean,\r\n                // It should remain null for auto inverse\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n\r\n            // Header\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            headerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Footer\r\n            footer: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            footerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Main block\r\n            title: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            subTitle: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            noBlock: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // Image\r\n            img: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            imgAlt: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            overlay: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div :class=\"['card-' + type]\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div class=\"carousel slide\" @mouseenter=\"pause\" @mouseleave=\"start\" :style=\"{background,height}\">\r\n        <!-- Indicators -->\r\n        <ol class=\"carousel-indicators\" v-show=\"indicators\">\r\n            <li v-for=\"n in slides.length\"\r\n                :class=\"{active:n-1 === index}\"\r\n                @click=\"index=n-1\"\r\n            ></li>\r\n        </ol>\r\n\r\n        <!-- Wrapper for slides -->\r\n        <div class=\"carousel-inner\" role=\"listbox\">\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Controls -->\r\n        <template v-if=\"controls\">\r\n            <a class=\"carousel-control-prev\" href=\"#\" role=\"button\" data-slide=\"prev\" @click.stop.prevent=\"prev\">\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\" href=\"#\" role=\"button\" data-slide=\"next\" @click.stop.prevent=\"next\">\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Next</span>\r\n            </a>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const DIRECTION = {\r\n        next: {\r\n            current: 'carousel-item-left',\r\n            next: 'carousel-item-right',\r\n            overlay: 'carousel-item-next'\r\n        },\r\n        prev: {\r\n            current: 'carousel-item-right',\r\n            next: 'carousel-item-left',\r\n            overlay: 'carousel-item-prev'\r\n        }\r\n    };\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                index: 0,\r\n                isSliding: false,\r\n                slides: []\r\n            };\r\n        },\r\n        props: {\r\n            interval: {\r\n                type: Number,\r\n                default: 5000\r\n            },\r\n            indicators: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            controls: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            height: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            // Previous slide\r\n            prev() {\r\n                if (this.index <= 0) {\r\n                    this.index = this.slides.length - 1;\r\n                } else {\r\n                    this.index--;\r\n                }\r\n            },\r\n\r\n            // Next slide\r\n            next() {\r\n                if (this.index >= this.slides.length - 1) {\r\n                    this.index = 0;\r\n                } else {\r\n                    this.index++;\r\n                }\r\n            },\r\n\r\n            // Pause auto rotation\r\n            pause() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                clearInterval(this._intervalId);\r\n            },\r\n\r\n            // Start auto rotate slides\r\n            start() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                this._intervalId = setInterval(() => {\r\n                    this.next();\r\n                }, this.interval);\r\n            }\r\n        },\r\n        mounted() {\r\n            // Get all slides\r\n            this.slides = this.$el.querySelectorAll('.carousel-item');\r\n\r\n            // Set first slide as active\r\n            this.slides[0].classList.add('active');\r\n\r\n            // Auto rotate slides\r\n            this.start();\r\n        },\r\n        watch: {\r\n            index(val, oldVal) {\r\n                if (val === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (this.isSliding) {\r\n                    this.index = oldVal;\r\n                    return;\r\n                }\r\n\r\n                // Determine sliding direction\r\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\r\n\r\n                // Rotates\r\n                if (oldVal === 0 && val === this.slides.length - 1) {\r\n                    direction = DIRECTION.prev;\r\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\r\n                    direction = DIRECTION.next;\r\n                }\r\n\r\n                // Determine current and next slides\r\n                const currentSlide = this.slides[oldVal];\r\n                const nextSlide = this.slides[val];\r\n\r\n                if (!currentSlide || !nextSlide) {\r\n                    return;\r\n                }\r\n\r\n                // Start animating\r\n                this.isSliding = true;\r\n\r\n                nextSlide.classList.add(direction.next, direction.overlay);\r\n                currentSlide.classList.add(direction.current);\r\n\r\n                this._carouselAnimation = setTimeout(() => {\r\n                    this.isSliding = false;\r\n                    this.$emit('slide', val);\r\n\r\n                    currentSlide.classList.remove('active');\r\n                    nextSlide.classList.add('active');\r\n\r\n                    currentSlide.classList.remove(direction.current);\r\n                    nextSlide.classList.remove(direction.next, direction.overlay);\r\n                }, 500);\r\n            }\r\n        },\r\n        destroyed() {\r\n            clearTimeout(this._carouselAnimation);\r\n            clearInterval(this._intervalId);\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div class=\"carousel-item\" :style=\"{background,height}\">\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\n        <div class=\"carousel-caption d-none d-md-block\">\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\n            <p v-if=\"text\" v-html=\"text\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            img: {\n                type: String\n            },\n            imgAlt: {\n                type: String\n            },\n\n            caption: {\n                type: String\n            },\n            text: {\n                type: String\n            },\n\n            background: {\n                type: String\n            },\n            height: {\n                type: String\n            }\n        }\n    };\n</script>\n","<template>\r\n    <transition\r\n            @enter=\"enter\"\r\n            @after-enter=\"clearHeight\"\r\n            @leave=\"leave\"\r\n            @after-leave=\"clearHeight\"\r\n            name=\"collapse\"\r\n    >\r\n        <div :class=\"classObject\" v-show=\"show\">\r\n            <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<style scoped>\r\n    .collapse-enter-active, .collapse-leave-active {\r\n        transition: all .35s ease;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .collapse-enter, .collapse-leave-to {\r\n        /*height: 0;*/\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export default {\r\n\r\n        data() {\r\n            return {\r\n                show: false\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            classObject() {\r\n                return {\r\n                    'navbar-collapse': this.isNav,\r\n                    show: this.show\r\n                };\r\n            }\r\n        },\r\n\r\n        props: {\r\n            isNav: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            id: {\r\n                type: String,\r\n                required: true\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            toggle() {\r\n                this.show = !this.show;\r\n            },\r\n            enter(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = '0px';\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = realHeight;\r\n            },\r\n            leave(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = realHeight;\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = '0px';\r\n            },\r\n            clearHeight(el) {\r\n                el.style.height = null;\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('collapse::toggle', target => {\r\n                if (target !== this.id) {\r\n                    return;\r\n                }\r\n                this.toggle();\r\n            });\r\n        }\r\n    };\r\n\r\n</script>\r\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","<template>\r\n    <div :class=\"['dropdown','btn-group',visible?'show':'',dropup?'dropup':'']\">\r\n\r\n        <b-button :class=\"[split?'':'dropdown-toggle',link?'btn-link':'']\"\r\n                  @click=\"click\"\r\n                  aria-haspopup=\"true\"\r\n                  :aria-expanded=\"visible\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\">\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <b-button class=\"dropdown-toggle dropdown-toggle-split\"\r\n                  :class=\"[link?'btn-link':'']\"\r\n                  v-if=\"split\"\r\n                  @click=\"toggle\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n        >\r\n            <span class=\"sr-only\">Toggle Dropdown</span>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',right?'dropdown-menu-right':'']\" tabindex=\"-1\">\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import bButton from './button.vue';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut\r\n        ],\r\n        components: {\r\n            bButton\r\n        },\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        props: {\r\n            split: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            text: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            dropup: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            right: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            link: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('shown::dropdown', el => {\r\n                if (el !== this) {\r\n                    this.visible = false;\r\n                }\r\n            });\r\n        },\r\n        watch: {\r\n            visible(state, old) {\r\n                if (state === old) {\r\n                    return; // Avoid duplicated emits\r\n                }\r\n\r\n                if (state) {\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                } else {\r\n                    this.$root.$emit('hidden::dropdown', this);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            toggle() {\r\n                this.visible = !this.visible;\r\n            },\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            },\r\n            click(e) {\r\n                if (this.split) {\r\n                    this.$emit('click', e);\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                } else {\r\n                    this.toggle();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <a :is=\"itemType\" class=\"dropdown-item\" :to=\"to\" :href=\"hrefString\"  @click=\"click\" tabindex=\"0\">\r\n        <slot></slot>\r\n    </a>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        extends: bLink,\r\n        computed: {\r\n            itemType() {\r\n                return (this.href || this.to) ? this.componentType : 'button';\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" class=\"dropdown-header\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'h6'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <div :class=\"['form-group','row',inputState]\">\r\n        <label :for=\"target\" v-if=\"label\" :class=\"['col-form-label',labelLayout]\" v-html=\"label\"></label>\r\n        <div :class=\"inputLayout\" ref=\"content\">\r\n            <slot></slot>\r\n            <div class=\"form-text form-control-feedback\" role=\"alert\" v-if=\"feedback\" v-html=\"feedback\"></div>\r\n            <small class=\"form-text text-muted\" v-if=\"description\" v-html=\"description\"></small>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                target: null\r\n            };\r\n        },\r\n        computed: {\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            },\r\n            labelLayout() {\r\n                return this.horizontal ? ('col-sm-' + this.labelSize) : 'col-12';\r\n            },\r\n            inputLayout() {\r\n                return this.horizontal ? ('col-sm-' + (12 - this.labelSize)) : 'col-12';\r\n            }\r\n        },\r\n        mounted() {\r\n            const content = this.$refs.content;\r\n            if (!content) {\r\n                return;\r\n            }\r\n            this.target = content.querySelector(this.inputSelector).id || false;\r\n        },\r\n        props: {\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            horizontal: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            labelSize: {\r\n                type: Number,\r\n                default: 3\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            description: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            feedback: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inputSelector: {\r\n                type: String,\r\n                default: 'input, select, textarea'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\r\n    computed: {\r\n        inputClass() {\r\n            return [\r\n                this.size ? `form-control-${this.size}` : null,\r\n                this.state ? `form-control-${this.state}` : null\r\n            ];\r\n        },\r\n        custom() {\r\n            return !this.plain;\r\n        }\r\n    },\r\n    props: {\r\n        name: {\r\n            type: String\r\n        },\r\n        disabled: {\r\n            type: Boolean\r\n        },\r\n        plain: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        state: {\r\n            type: String\r\n        },\r\n        size: {\r\n            type: String\r\n        },\r\n        id: {\r\n            type: String\r\n        }\r\n    }\r\n};\r\n\r\n","export default {\r\n    computed: {\r\n        checkboxClass() {\r\n            return {\r\n                'custom-control': this.custom,\r\n                'form-check-inline': this.inline\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\n","<template>\r\n    <label :class=\"[inputClass,checkboxClass,custom?'custom-checkbox':null]\">\r\n        <input\r\n                type=\"checkbox\"\r\n                :id=\"id || ('b_'+_uid)\"\r\n                :name=\"name\"\r\n                :value=\"value\"\r\n                :disabled=\"disabled\"\r\n\r\n                :class=\"[custom?'custom-control-input':null]\"\r\n                :checked=\"checked===value\"\r\n                @change=\"$emit('change',$event.target.checked?value:uncheckedValue)\"\r\n        >\r\n        <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n        <span :class=\"[custom?'custom-control-description':null]\"><slot></slot></span>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin],\r\n        model: {\r\n            prop: 'checked',\r\n            event: 'change'\r\n        },\r\n        props: {\r\n            value: {\r\n                default: true\r\n            },\r\n            uncheckedValue: {\r\n                default: false\r\n            },\r\n            checked: {\r\n                default: true\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","export default {\r\n    computed: {\r\n        formOptions() {\r\n            let options = this.options || {};\r\n\r\n            if (Array.isArray(options)) {\r\n                // Normalize flat arrays to object Array\r\n                options = options.map(option => {\r\n                    if (typeof option === 'object') {\r\n                        return {\r\n                            value: option[this.valueField],\r\n                            text: option[this.textField],\r\n                            disabled: option.disabled || false\r\n                        };\r\n                    }\r\n\r\n                    return {text: String(option), value: option || {}};\r\n                });\r\n            } else {\r\n                // Normalize Objects keys to Array\r\n                options = Object.keys(options).map(value => {\r\n                    let option = options[value] || {};\r\n\r\n                    // Resolve text\r\n                    if (typeof option !== 'object') {\r\n                        option = {text: String(option)};\r\n                    }\r\n\r\n                    // Resolve value (uses key as value if not provided)\r\n                    option.value = option[this.valueField] || value;\r\n\r\n                    return option;\r\n                });\r\n            }\r\n\r\n            return options;\r\n        },\r\n        selectedValue() {\r\n            const formOptions = this.formOptions;\r\n            for (let i = 0; i < formOptions.length; i++) {\r\n                if (formOptions[i].value === this.localValue) {\r\n                    if (this.returnObject) {\r\n                        return formOptions[i];\r\n                    }\r\n                    return formOptions[i].value;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        valueField: {\r\n            type: [String],\r\n            default: 'value'\r\n        },\r\n        textField: {\r\n            type: [String],\r\n            default: 'text'\r\n        }\r\n    },\r\n    watch: {\r\n        localValue(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.$emit('input', this.selectedValue);\r\n        },\r\n        value(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.localValue = value;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"[inputClass,this.stacked?'custom-controls-stacked':'']\">\r\n        <label :class=\"[checkboxClass,custom?'custom-radio':null]\" v-for=\"option in formOptions\">\r\n            <input\r\n                    v-model=\"localValue\"\r\n                    :class=\"custom?'custom-control-input':null\"\r\n                    type=\"radio\"\r\n                    :value=\"option.value\"\r\n                    :name=\"option.name\"\r\n                    :id=\"option.id\"\r\n                    :disabled=\"option.disabled\"\r\n                    ref=\"inputs\"\r\n            >\r\n\r\n            <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n\r\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\r\n\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import formOptionsMixin from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, formOptionsMixin],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        computed: {\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            }\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                default: null,\r\n                required: true\r\n            },\r\n            stacked: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <input\r\n            :type=\"type\"\r\n            :value=\"value\"\r\n            :name=\"name\"\r\n            :id=\"id || ('b_'+_uid)\"\r\n            :disabled=\"disabled\"\r\n            ref=\"input\"\r\n\r\n            :is=\"textarea?'textarea':'input'\"\r\n            :class=\"['form-control',inputClass]\"\r\n            :rows=\"rows || rowsCount\"\r\n\r\n            :placeholder=\"placeholder\"\r\n\r\n            @input=\"onInput($event.target.value)\"\r\n            @change=\"onChange($event.target.value)\"\r\n            @keyup=\"onKeyUp($event)\"\r\n            @focus=\"$emit('focus')\"\r\n            @blur=\"$emit('blur')\"\r\n    />\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n\r\n    export default {\r\n        mixins: [formMixin],\r\n        computed: {\r\n            rowsCount() {\r\n                return (this.value || '').toString().split('\\n').length;\r\n            }\r\n        },\r\n        methods: {\r\n            format(value) {\r\n                if (this.formatter) {\r\n                    const formattedValue = this.formatter(value);\r\n                    if (formattedValue !== value) {\r\n                        value = formattedValue;\r\n                        this.$refs.input.value = formattedValue;\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n            onInput(value) {\r\n                if (!this.lazyFormatter) {\r\n                    value = this.format(value);\r\n                }\r\n                this.$emit('input', value);\r\n            },\r\n            onChange(value) {\r\n                value = this.format(value);\r\n                this.$emit('input', value);\r\n                this.$emit('change', value);\r\n            },\r\n            onKeyUp(e) {\r\n                this.$emit('keyup', e);\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'text'\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            rows: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            textarea: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            },\r\n            lazyFormatter: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <label :class=\"[custom?'custom-file':null,inputClass]\"\r\n           @dragover.stop.prevent=\"dragover\"\r\n    >\r\n\r\n        <!-- Drop Here Target -->\r\n        <span class=\"drop-here\"\r\n              v-if=\"dragging\"\r\n              @dragover.stop.prevent=\"dragover\"\r\n              @drop.stop.prevent=\"drop\"\r\n              @dragleave.stop.prevent=\"dragging=false\"\r\n              :data-drop=\"dropLabel\"\r\n        ></span>\r\n\r\n        <!-- Real Form input -->\r\n        <input type=\"file\"\r\n               :name=\"name\"\r\n               :id=\"id || ('b_'+_uid)\"\r\n               :disabled=\"disabled\"\r\n               ref=\"input\"\r\n               :accept=\"accept\"\r\n\r\n               class=\"custom-file-input\"\r\n               @change=\"onFileChange\"\r\n               :multiple=\"multiple\"\r\n               :webkitdirectory=\"directory\"\r\n        >\r\n\r\n        <!-- Overlay Labels -->\r\n        <span :class=\"['custom-file-control',dragging?'dragging':null,inputClass]\"\r\n              :data-choose=\"computedChooseLabel\"\r\n              :data-selected=\"selectedLabel\"\r\n              v-if=\"custom\"\r\n        ></span>\r\n\r\n    </label>\r\n</template>\r\n\r\n<style>\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control.dragging {\r\n        overflow: hidden;\r\n        filter: blur(3px);\r\n    }\r\n\r\n    .custom-file-control::after {\r\n        content: attr(data-selected);\r\n    }\r\n\r\n    .custom-file-control::before {\r\n        content: attr(data-choose);\r\n    }\r\n\r\n    .custom-file .drop-here {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, .5);\r\n        border-radius: 3px;\r\n        z-index: 99999;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .custom-file .drop-here::before {\r\n        color: white;\r\n        content: attr(data-drop);\r\n    }\r\n\r\n</style>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n\r\n    export default {\r\n        mixins: [formMixin],\r\n        data() {\r\n            return {\r\n                selectedFile: null,\r\n                dragging: false\r\n            };\r\n        },\r\n        computed: {\r\n            selectedLabel() {\r\n                if (!this.selectedFile || this.selectedFile.length === 0) {\r\n                    return this.placeholder || 'No file chosen';\r\n                }\r\n\r\n                if (this.multiple) {\r\n                    if (this.selectedFile.length === 1) {\r\n                        return this.selectedFile[0].name;\r\n                    }\r\n\r\n                    return this.selectedFormat\r\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\r\n                        .replace(':count', this.selectedFile.length);\r\n                }\r\n\r\n                return this.selectedFile.name;\r\n            },\r\n            computedChooseLabel() {\r\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\r\n            }\r\n        },\r\n        watch: {\r\n            selectedFile(newVal, oldVal) {\r\n                if (newVal === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (!newVal && this.multiple) {\r\n                    this.$emit('input', []);\r\n                } else {\r\n                    this.$emit('input', newVal);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            onFileChange(e) {\r\n                // Always emit original event\r\n                this.$emit('change', e);\r\n\r\n                // Check if special `items` prop is available on event (drop mode)\r\n                // Can be disabled by setting no-traverse\r\n                const items = e.dataTransfer && e.dataTransfer.items;\r\n                if (items && !this.noTraverse) {\r\n                    const queue = [];\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i].webkitGetAsEntry();\r\n                        if (item) {\r\n                            queue.push(this.traverseFileTree(item));\r\n                        }\r\n                    }\r\n                    Promise.all(queue).then(filesArr => {\r\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                // Normal handling\r\n                this.setFiles(e.target.files || e.dataTransfer.files);\r\n            },\r\n            setFiles(files) {\r\n                if (!files) {\r\n                    this.selectedFile = null;\r\n                    return;\r\n                }\r\n\r\n                if (!this.multiple) {\r\n                    this.selectedFile = files[0];\r\n                    return;\r\n                }\r\n\r\n                // Convert files to array\r\n                const filesArray = [];\r\n                for (let i = 0; i < files.length; i++) {\r\n                    if (files[i].type.match(this.accept)) {\r\n                        filesArray.push(files[i]);\r\n                    }\r\n                }\r\n\r\n                this.selectedFile = filesArray;\r\n            },\r\n            dragover(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = true;\r\n                e.dataTransfer.dropEffect = 'copy';\r\n            },\r\n            drop(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = false;\r\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n                    this.onFileChange(e);\r\n                }\r\n            },\r\n            traverseFileTree(item, path) {\r\n                // Based on http://stackoverflow.com/questions/3590058\r\n                return new Promise(resolve => {\r\n                    path = path || '';\r\n                    if (item.isFile) {\r\n                        // Get file\r\n                        item.file(file => {\r\n                            file.$path = path; // Inject $path to file obj\r\n                            resolve(file);\r\n                        });\r\n                    } else if (item.isDirectory) {\r\n                        // Get folder contents\r\n                        item.createReader().readEntries(entries => {\r\n                            const queue = [];\r\n                            for (let i = 0; i < entries.length; i++) {\r\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\r\n                            }\r\n                            Promise.all(queue).then(filesArr => {\r\n                                resolve(Array.prototype.concat.apply([], filesArr));\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            accept: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            chooseLabel: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            multiple: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            directory: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noTraverse: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            selectedFormat: {\r\n                type: String,\r\n                default: ':count Files'\r\n            },\r\n            noDrop: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dropLabel: {\r\n                type: String,\r\n                default: 'Drop files here'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <select :class=\"[inputClass,custom?'custom-select':null]\"\r\n            :name=\"name\"\r\n            :id=\"id || ('b_'+_uid)\"\r\n            v-model=\"localValue\"\r\n            :disabled=\"disabled\"\r\n            ref=\"input\"\r\n    >\r\n        <option v-for=\"option in formOptions\"\r\n                :value=\"option.value\"\r\n                v-html=\"option.text\"\r\n                :disabled=\"option.disabled\"\r\n        ></option>\r\n    </select>\r\n</template>\r\n\r\n<script>\r\n    import formOptions from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n\r\n    export default {\r\n        mixins: [formMixin, formOptions],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                required: true\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\n        <div class=\"container\">\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {},\n        props: {\n            fluid: {\n                type: Boolean,\n                default: false\n            },\n            header: {\n                type: String,\n                default: null\n            },\n            lead: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\" :class=\"classObject\" ref=\"item\" :to=\"to\" :href=\"href\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    const actionTags = ['a', 'router-link', 'button', 'b-link'];\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'list-group-item',\n                    this.listState,\n                    this.active ? 'active' : null,\n                    this.disabled ? 'disabled' : null,\n                    this.isAction ? 'list-group-item-action' : null\n                ];\n            },\n            isAction() {\n                if (this.action === false) {\n                    return false;\n                }\n                return this.action || this.to || this.href || actionTags.indexOf(this.tag) !== -1;\n            },\n            listState() {\n                return this.variant ? `list-group-item-${this.variant}` : null;\n            },\n            myTag() {\n                if (this.tag) {\n                    return this.tag;\n                }\n                return (this.to || this.href) ? 'b-link' : 'div';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: null\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            action: {\n                type: Boolean,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: String,\n                default: null\n            },\n            href: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div>\r\n        <transition-group enter-class=\"hidden\"\r\n                          enter-to-class=\"\"\r\n                          enter-active-class=\"\"\r\n                          leave-class=\"show\"\r\n                          leave-active-class=\"\"\r\n                          leave-to-class=\"hidden\"\r\n        >\r\n            <div key=\"modal\" :id=\"id\"\r\n                 v-show=\"is_visible\"\r\n                 :class=\"['modal',{fade: fade, show: is_visible}]\"\r\n                 role=\"dialog\"\r\n                 @click=\"onClickOut($event)\"\r\n                 @keyup.esc=\"onEsc($event)\"\r\n            >\r\n\r\n                <div :class=\"['modal-dialog','modal-'+size]\">\r\n                    <div class=\"modal-content\"\r\n                         tabindex=\"-1\"\r\n                         role=\"document\"\r\n                         ref=\"content\"\r\n                         :aria-labeledby=\"hideHeader ? '' : (id + '_modal_title')\"\r\n                         :aria-describedby=\"id + '_modal_body'\"\r\n                         @click.stop\r\n                    >\r\n\r\n                        <header class=\"modal-header\" v-if=\"!hideHeader\">\r\n                            <slot name=\"modal-header\">\r\n                                <h5 class=\"modal-title\" :id=\"id + '_modal_title'\">\r\n                                    <slot name=\"modal-title\">{{title}}</slot>\r\n                                </h5>\r\n                                <button type=\"button\"\r\n                                        v-if=\"!hideHeaderClose\"\r\n                                        class=\"close\"\r\n                                        :aria-label=\"closeTitle\"\r\n                                        @click=\"hide\"\r\n                                >\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </slot>\r\n                        </header>\r\n\r\n                        <div class=\"modal-body\" :id=\"id + '_modal_body'\">\r\n                            <slot></slot>\r\n                        </div>\r\n\r\n                        <footer class=\"modal-footer\" v-if=\"!hideFooter\">\r\n                            <slot name=\"modal-footer\">\r\n                                <b-btn variant=\"secondary\" @click=\"hide(false)\">{{closeTitle}}</b-btn>\r\n                                <b-btn variant=\"primary\" @click=\"hide(true)\">{{okTitle}}</b-btn>\r\n                            </slot>\r\n                        </footer>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div key=\"modal-backdrop\"\r\n                 :class=\"['modal-backdrop',{fade: fade, show: is_visible}]\"\r\n                 v-if=\"is_visible\"\r\n            ></div>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n    .hidden {\r\n        opacity: 0 !important;\r\n    }\r\n\r\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style*/\r\n    .modal {\r\n        display: block;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import bBtn from './button.vue';\r\n\r\n    export default {\r\n        components: {bBtn},\r\n        data() {\r\n            return {\r\n                is_visible: false\r\n            };\r\n        },\r\n        model: {\r\n            prop: 'visible',\r\n            event: 'change'\r\n        },\r\n        computed: {\r\n            body() {\r\n                if (typeof document !== 'undefined') {\r\n                    return document.querySelector('body');\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            visible(new_val, old_val) {\r\n                if (new_val === old_val) {\r\n                    return;\r\n                }\r\n\r\n                if (new_val) {\r\n                    this.show();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            fade: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeTitle: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            okTitle: {\r\n                type: String,\r\n                default: 'OK'\r\n            },\r\n            closeOnBackdrop: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeOnEsc: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            hideHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideHeaderClose: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            show() {\r\n                if (this.is_visible) {\r\n                    return;\r\n                }\r\n                this.is_visible = true;\r\n                this.$root.$emit('shown::modal', this.id);\r\n                this.body.classList.add('modal-open');\r\n                this.$emit('shown');\r\n                this.$emit('change', true);\r\n            },\r\n            hide(isOK) {\r\n                if (!this.is_visible) {\r\n                    return;\r\n                }\r\n\r\n                // Create event object\r\n                let canceled = false;\r\n                const e = {\r\n                    isOK,\r\n                    cancel() {\r\n                        canceled = true;\r\n                    }\r\n                };\r\n\r\n                // Emit events\r\n                this.$emit('change', false);\r\n                this.$emit('hidden', e);\r\n\r\n                if (isOK === true) {\r\n                    this.$emit('ok', e);\r\n                } else if (isOK === false) {\r\n                    this.$emit('cancel', e);\r\n                }\r\n\r\n                // Hide if not canceled\r\n                if (!canceled) {\r\n                    this.is_visible = false;\r\n                    this.$root.$emit('hidden::modal', this.id);\r\n                    this.body.classList.remove('modal-open');\r\n                }\r\n            },\r\n            onClickOut() {\r\n                // If backdrop clicked, hide modal\r\n                if (this.closeOnBackdrop) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            onEsc() {\r\n                // If ESC presses, hide modal\r\n                if (this.is_visible && this.closeOnEsc) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            enforceFocus(e) {\r\n                // If focus leaves modal, bring it back\r\n                // eventListener bound on document\r\n                if (this.is_visible &&\r\n                    document !== e.target &&\r\n                    this.$refs.content &&\r\n                    this.$refs.content !== e.target &&\r\n                    !this.$refs.content.contains(e.target)) {\r\n                    this.$refs.content.focus();\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('show::modal', id => {\r\n                if (id === this.id) {\r\n                    this.show();\r\n                }\r\n            });\r\n\r\n            this.$root.$on('hide::modal', id => {\r\n                if (id === this.id) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        },\r\n        mounted() {\r\n            if (typeof document !== 'undefined') {\r\n                document.addEventListener('focus', this.enforceFocus);\r\n            }\r\n\r\n            if (this.visible === true) {\r\n                this.show();\r\n            }\r\n        },\r\n        destroyed() {\r\n            if (typeof document !== 'undefined') {\r\n                document.removeEventListener('focus', this.enforceFocus);\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <li class=\"nav-item\" @click=\"onclick\">\r\n        <b-link :class=\"classObject\" :to=\"to\" :href=\"href\" :exact=\"exact\">\r\n            <slot></slot>\r\n        </b-link>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'nav-link',\r\n                    this.active ? 'active' : '',\r\n                    this.disabled ? 'disabled' : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            },\r\n            exact: {\r\n                type: Boolean\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                // Hide all drop-downs including navbar-toggle\r\n                this.$root.$emit('shown::dropdown', this);\r\n                this.$emit('click', e);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <li :class=\"{'nav-item': true, show: visible,dropdown: !dropup, dropup: dropup}\">\r\n        <a @click.stop.prevent=\"toggle($event)\"\r\n           :class=\"['nav-link', dropdownToggle]\"\r\n           href=\"\" aria-haspopup=\"true\"\r\n           :aria-expanded=\"visible\"\r\n           :disabled=\"disabled\">\r\n            <slot name=\"text\">{{ text }}</slot>\r\n        </a>\r\n        <div :class=\"{'dropdown-menu': true, 'dropdown-menu-right': rightAlignment}\">\r\n            <slot></slot>\r\n        </div>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            text: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            dropup: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            rightAlignment: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            class: ['class']\r\n        },\r\n        created() {\r\n            // To keep one dropdown opened at page\r\n            this.$root.$on('shown::dropdown', el => {\r\n                if (el !== this) {\r\n                    this.close();\r\n                }\r\n            });\r\n        },\r\n        watch: {\r\n            visible(state, old) {\r\n                if (state === old) {\r\n                    return; // Avoid duplicated emits\r\n                }\r\n\r\n                if (state) {\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                } else {\r\n                    this.$root.$emit('hidden::dropdown', this);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            toggle() {\r\n                this.visible = !this.visible;\r\n            },\r\n            open() {\r\n                this.visible = true;\r\n            },\r\n            close() {\r\n                this.visible = false;\r\n            },\r\n            clickOutListener() {\r\n                this.close();\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        }\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? `navbar-toggleable-${this.toggleBreakpoint}` : null\n                ];\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: 'sm'\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: String\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"btn-group pagination\" role=\"group\" aria-label=\"Pagination\">\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == 1 \"\n                @click.prevent=\"(currentPage == 1) ? _return : currentPage--\">\n            <span aria-hidden=\"true\">&laquo;</span>\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,currentPage === 1 ?  'active' : '']\"\n                @click.prevent=\"currentPage = 1\"\n                v-show=\"showPrev\">1\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showPrev\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn',\n                btnSize,\n                btnVariant(index),\n                index + diff === currentPage ? 'active' : '',\n                index + diff !== currentPage ? 'hidden-xs-down' : '']\"\n                v-for=\"(item,index) in pageLinks\"\n                @click.prevent=\"currentPage = index + diff\">{{index + diff}}\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showNext\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,numberOfPages === currentPage ? 'active' : '']\"\n                v-show=\"showNext\"\n                @click.prevent=\"currentPage = numberOfPages\">{{numberOfPages}}\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == numberOfPages\"\n                @click.prevent=\"(currentPage == numberOfPages) ? _return : currentPage++\">\n            <span aria-hidden=\"true\">&raquo;</span>\n        </button>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                diff: 1,\n                showPrev: false,\n                showNext: false,\n                currentPage: this.value\n            };\n        },\n        computed: {\n            numberOfPages() {\n                const result = Math.ceil(this.totalRows / this.perPage);\n                return (result < 1) ? 1 : result;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            pageLinks() {\n                let result = this.limit;\n                if (this.currentPage > this.numberOfPages) {\n                    this.currentPage = 1;\n                }\n                this.diff = 1;\n                this.showPrev = false;\n                this.showNext = false;\n                // If less pages than limit just show this pages\n                if (this.numberOfPages <= this.limit) {\n                    return this.numberOfPages;\n                }\n                // If at the beggining of the list or at the end show full number of pages within limit - 2\n                // -2 is reserves space for two buttons: \"...\" and \"first/last button\"\n                if (this.currentPage <= this.limit - 2) {\n                    this.diff = 1;\n                    this.showNext = true;\n                    result = this.limit - 2;\n                }\n                // At the end of the range\n                if (this.currentPage > this.numberOfPages - this.limit + 2) {\n                    this.diff = this.numberOfPages - this.limit + 3;\n                    this.showPrev = true;\n                    result = this.limit - 2;\n                }\n                // If somehere in the middle show just limit - 4 links in the middle and one button on the left with \"...\" and on button on the right preceeded with \"...\"\n                if (this.currentPage >= this.limit - 2 && this.currentPage <= this.numberOfPages - this.limit + 2) {\n                    this.diff = this.currentPage - 1;\n                    this.showPrev = true;\n                    this.showNext = true;\n                    result = this.limit - 4;\n                }\n                return result;\n            }\n        },\n        methods: {\n            btnVariant(index) {\n                return (index + this.diff === this.currentPage) ? `btn-${this.variant}` : `btn-${this.secondaryVariant}`;\n            },\n            _return() {\n\n            }\n        },\n        watch: {\n            currentPage(newPage) {\n                this.$emit('input', newPage);\n            },\n            value(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    this.currentPage = newValue;\n                }\n            }\n        },\n        props: {\n            value: {\n                type: Number,\n                default: 1\n            },\n            limit: {\n                type: Number,\n                default: 7\n            },\n            perPage: {\n                type: Number,\n                default: 20\n            },\n            totalRows: {\n                type: Number,\n                default: 20\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            variant: {\n                type: String,\n                default: 'primary'\n            },\n            secondaryVariant: {\n                type: String,\n                default: 'secondary'\n            }\n        }\n    };\n\n</script>\n","<template>\r\n    <div>\r\n        <span ref=\"trigger\"><slot></slot></span>\r\n\r\n        <div tabindex=\"-1\" class=\"popover fade\" :class=\"[classState ? 'show' : '', popoverAlignment]\" ref=\"popover\" @focus=\"$emit('focus')\"\r\n             @blur=\"$emit('blur')\" :style=\"popoverStyle\">\r\n            <div class=\"popover-arrow\"></div>\r\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\r\n            <div class=\"popover-content\">\r\n                <div class=\"popover-content-wrapper\">\r\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Tether from 'tether';\r\n\r\n    // Controls which events are mapped for each named trigger, and the expected popover behavior for each.\r\n    const TRIGGER_LISTENERS = {\r\n        click: {click: 'toggle'},\r\n        hover: {mouseenter: 'show', mouseleave: 'hide'},\r\n        focus: {focus: 'show', blur: 'hide'}\r\n    };\r\n\r\n    const PLACEMENT_PARAMS = {\r\n        top: {\r\n            attachment: 'bottom center',\r\n            targetAttachment: 'top center'\r\n        },\r\n        bottom: {\r\n            attachment: 'top center',\r\n            targetAttachment: 'bottom center'\r\n        },\r\n        left:\r\n        {\r\n            attachment: 'middle right',\r\n            targetAttachment: 'middle left'\r\n        },\r\n        right: {\r\n            attachment: 'middle left',\r\n            targetAttachment: 'middle right'\r\n        }\r\n    };\r\n\r\n    const TETHER_CLASS_PREFIX = 'tether-';\r\n\r\n    const TRANSITION_DURATION = 150;\r\n\r\n    export default {\r\n        props: {\r\n            constraints: {\r\n                type: Array,\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n            content: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            debounce: {\r\n                type: [Number],\r\n                default: 300,\r\n                validator(value) {\r\n                    return value >= 0;\r\n                }\r\n            },\r\n            delay: {\r\n                type: [Number, Object],\r\n                default: 0,\r\n                validator(value) {\r\n                    if (typeof value === 'number') {\r\n                        return value >= 0;\r\n                    } else if (value !== null && typeof value === 'object') {\r\n                        return typeof value.show === 'number' &&\r\n                            typeof value.hide === 'number' &&\r\n                            value.show >= 0 &&\r\n                            value.hide >= 0;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            },\r\n            offset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            placement: {\r\n                type: String,\r\n                default: 'top',\r\n                validator(value) {\r\n                    return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\r\n                }\r\n            },\r\n            popoverStyle: {\r\n                type: Object,\r\n                default: null\r\n            },\r\n            show: {\r\n                type: Boolean,\r\n                default: null\r\n            },\r\n            targetOffset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            triggers: {\r\n                type: [Boolean, String, Array],\r\n                default: () => ['click', 'focus'],\r\n                validator(value) {\r\n                    // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\r\n                    if (value === false || value === '') {\r\n                        return true;\r\n                    } else if (typeof value === 'string') {\r\n                        return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\r\n                    } else if (Array.isArray(value)) {\r\n                        const keys = Object.keys(TRIGGER_LISTENERS);\r\n                        value.forEach(item => {\r\n                            if (keys.indexOf(item) === -1) {\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                triggerState: this.show,\r\n                classState: this.show,\r\n                lastEvent: null\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            /**\r\n             * Arrange event trigger hooks as array for all input types.\r\n             *\r\n             * @return Array\r\n             */\r\n            normalizedTriggers() {\r\n                if (this.triggers === false) {\r\n                    return [];\r\n                } else if (typeof this.triggers === 'string') {\r\n                    return [this.triggers];\r\n                }\r\n                return this.triggers;\r\n            },\r\n\r\n            /**\r\n             * Class property to be used for Popover rendering\r\n             *\r\n             * @return String\r\n             */\r\n            popoverAlignment() {\r\n                return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\r\n            },\r\n\r\n            /**\r\n             * Determine if the Popover should be shown.\r\n             *\r\n             * @return Boolean\r\n             */\r\n            showState() {\r\n                return this.show !== false && (this.triggerState || this.show);\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            constraints() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Popover event triggers\r\n             * @param {Array} newTriggers\r\n             * @param {Array} oldTriggers\r\n             */\r\n            normalizedTriggers(newTriggers, oldTriggers) {\r\n                this.updateListeners(newTriggers, oldTriggers);\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            offset() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            placement() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Affect 'show' state in response to status change\r\n             * @param  {Boolean} val\r\n             */\r\n            showState(val) {\r\n                const delay = this.getDelay(val);\r\n\r\n                clearTimeout(this._timeout);\r\n\r\n                if (delay) {\r\n                    this._timeout = setTimeout(() => this.togglePopover(val), delay);\r\n                } else {\r\n                    this.togglePopover(val);\r\n                }\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            /**\r\n             * Add all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            addListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.addEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Tidy removal of Tether object from the DOM\r\n             */\r\n            destroyTether() {\r\n                if (this._tether && !this.showState) {\r\n                    this._tether.destroy();\r\n                    this._tether = null;\r\n\r\n                    const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\r\n                    this._trigger.className = this._trigger.className.replace(regx, '');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handle multiple event triggers\r\n             * @param  {Object} e\r\n             */\r\n            eventHandler(e) {\r\n                // If this event is right after a previous successful event, ignore it (debounce)\r\n                if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\r\n                    return;\r\n                }\r\n\r\n                // Look up the expected popover action for the event\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const trigger in TRIGGER_LISTENERS) {\r\n                    for (const event in TRIGGER_LISTENERS[trigger]) {\r\n                        if (event === e.type) {\r\n                            const action = TRIGGER_LISTENERS[trigger][event];\r\n\r\n                            // If the expected event action is the opposite of the current state, allow it\r\n                            if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\r\n                                this.triggerState = !this.triggerState;\r\n                                this.lastEvent = e.timeStamp;\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the currently applicable popover delay\r\n             *\r\n             * @returns Number\r\n             */\r\n            getDelay(state) {\r\n                if (typeof this.delay === 'object') {\r\n                    return state ? this.delay.show : this.delay.hide;\r\n                }\r\n\r\n                return this.delay;\r\n            },\r\n\r\n            /**\r\n             * Tether construct params for each show event.\r\n             *\r\n             * @return Object\r\n             */\r\n            getTetherOptions() {\r\n                return {\r\n                    element: this._popover,\r\n                    target: this._trigger,\r\n                    constraints: this.constraints,\r\n                    attachment: PLACEMENT_PARAMS[this.placement].attachment,\r\n                    targetAttachment: PLACEMENT_PARAMS[this.placement].targetAttachment,\r\n                    offset: this.offset,\r\n                    targetOffset: this.targetOffset\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Hide popover and fire event\r\n             */\r\n            hidePopover() {\r\n                this.classState = false;\r\n                clearTimeout(this._timeout);\r\n                this._timeout = setTimeout(() => {\r\n                    this._popover.style.display = 'none';\r\n                    this.destroyTether();\r\n                }, TRANSITION_DURATION);\r\n            },\r\n\r\n            /**\r\n             * Refresh the Popover position in order to respond to changes\r\n             */\r\n            refreshPosition() {\r\n                if (this._tether) {\r\n                    this.$nextTick(() => {\r\n                        this._tether.position();\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Remove all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            removeListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.removeEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Update tether options\r\n             */\r\n            setOptions() {\r\n                if (this._tether) {\r\n                    this._tether.setOptions(this.getTetherOptions());\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Display popover and fire event\r\n             */\r\n            showPopover() {\r\n                clearTimeout(this._timeout);\r\n\r\n                if (!this._tether) {\r\n                    this._tether = new Tether(this.getTetherOptions());\r\n                }\r\n                this._popover.style.display = 'block';\r\n\r\n                // Make sure the popup is rendered in the correct location\r\n                this.refreshPosition();\r\n\r\n                this.$nextTick(() => {\r\n                    this.classState = true;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Handle Popover show or hide instruction\r\n             */\r\n            togglePopover(newShowState) {\r\n                this.$emit('showChange', newShowState);\r\n                if (newShowState) {\r\n                    this.showPopover();\r\n                    this.$root.$emit('shown::popover');\r\n                } else {\r\n                    this.hidePopover();\r\n                    this.$root.$emit('hidden::popover');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Study the 'triggers' component property and apply all selected triggers\r\n             * @param {Array} triggers\r\n             * @param {Array} appliedTriggers\r\n             */\r\n            updateListeners(triggers, appliedTriggers = []) {\r\n                const newTriggers = [];\r\n                const removeTriggers = [];\r\n\r\n                // Look for new events not yet mapped (all of them on first load)\r\n                triggers.forEach(item => {\r\n                    if (appliedTriggers.indexOf(item) === -1) {\r\n                        newTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Disable any removed event triggers\r\n                appliedTriggers.forEach(item => {\r\n                    if (triggers.indexOf(item) === -1) {\r\n                        removeTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Apply trigger mapping changes\r\n                newTriggers.forEach(item => this.addListener(item));\r\n                removeTriggers.forEach(item => this.removeListener(item));\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('hide::popover', () => {\r\n                this.triggerState = false;\r\n            });\r\n        },\r\n\r\n        mounted() {\r\n            // Configure tether\r\n            this._trigger = this.$refs.trigger.children[0];\r\n            this._popover = this.$refs.popover;\r\n            this._timeout = 0;\r\n\r\n            // Add listeners for specified triggers and complementary click event\r\n            this.updateListeners(this.normalizedTriggers);\r\n\r\n            // Display popover if prop is set on load\r\n            if (this.showState) {\r\n                this.showPopover();\r\n            }\r\n        },\r\n\r\n        updated() {\r\n            this.refreshPosition();\r\n        },\r\n\r\n        beforeDestroy() {\r\n            this.normalizedTriggers.forEach(item => this.removeListener(item));\r\n            clearTimeout(this._timeout);\r\n            this.destroyTether();\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <table :class=\"['table',striped?'table-striped':'',hover?'table-hover':'']\">\r\n        <thead>\r\n        <tr>\r\n            <th @click=\"headClick(field,key)\"\r\n                :class=\"[field.sortable?'sorting':null,sortBy===key?'sorting_'+(sortDesc?'desc':'asc'):'',field.class?field.class:null]\"\r\n                v-for=\"field,key in fields\"\r\n                v-html=\"field.label\"\r\n            ></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr v-for=\"(item,index) in _items\" :key=\"items_key\" :class=\"[item.state?'table-'+item.state:null]\" @click=\"rowClicked(item, index)\">\r\n            <td v-for=\"(field,key) in fields\" :class=\"[field.class?field.class:null]\">\r\n                <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\n    import bPagination from './pagination.vue';\r\n\r\n    const toString = v => {\r\n        if (!v) {\r\n            return '';\r\n        }\r\n\r\n        if (v instanceof Object) {\r\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\r\n        }\r\n\r\n        return String(v);\r\n    };\r\n\r\n    const defaultSortCompare = (a, b, sortBy) => {\r\n        return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {numeric: true});\r\n    };\r\n\r\n    export default {\r\n        components: {bPagination},\r\n        data() {\r\n            return {\r\n                sortBy: null,\r\n                sortDesc: true\r\n            };\r\n        },\r\n\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            fields: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            },\r\n            striped: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hover: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            perPage: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            items_key: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            currentPage: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            filter: {\r\n                type: [String, RegExp, Function],\r\n                default: null\r\n            },\r\n            sortCompare: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            itemsProvider: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            value: {\r\n                type: Array,\r\n                default: () => []\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            _items() {\r\n                if (!this.items) {\r\n                    return [];\r\n                }\r\n\r\n                if (this.itemsProvider) {\r\n                    return this.itemsProvider(this);\r\n                }\r\n\r\n                let items = this.items;\r\n\r\n                // Apply filter\r\n                if (this.filter) {\r\n                    if (this.filter instanceof Function) {\r\n                        items = items.filter(this.filter);\r\n                    } else {\r\n                        let regex;\r\n                        if (this.filter instanceof RegExp) {\r\n                            regex = this.filter;\r\n                        } else {\r\n                            regex = new RegExp('.*' + this.filter + '.*', 'ig');\r\n                        }\r\n                        items = items.filter(item => {\r\n                            const test = regex.test(toString(item));\r\n                            regex.lastIndex = 0;\r\n                            return test;\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Apply Sort\r\n                const sortCompare = this.sortCompare || defaultSortCompare;\r\n                if (this.sortBy) {\r\n                    items = items.sort((a, b) => {\r\n                        const r = sortCompare(a, b, this.sortBy);\r\n                        return this.sortDesc ? r : r * -1;\r\n                    });\r\n                }\r\n\r\n                this.$emit('input', items);\r\n\r\n                // Apply pagination\r\n                if (this.perPage) {\r\n                    items = items.slice((this.currentPage - 1) * this.perPage, this.currentPage * this.perPage);\r\n                }\r\n                return items;\r\n            }\r\n        },\r\n        methods: {\r\n            rowClicked(item, index) {\r\n                this.$emit('row-clicked', item, index);\r\n            },\r\n            headClick(field, key) {\r\n                if (!field.sortable) {\r\n                    this.sortBy = null;\r\n                    return;\r\n                }\r\n\r\n                if (key === this.sortBy) {\r\n                    this.sortDesc = !this.sortDesc;\r\n                }\r\n\r\n                this.sortBy = key;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n\r\n<style>\r\n    /* https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\r\n\r\n    table thead > tr > th.sorting_asc, table thead > tr > th.sorting_desc, table thead > tr > th.sorting,\r\n    table thead > tr > td.sorting_asc,\r\n    table thead > tr > td.sorting_desc,\r\n    table thead > tr > td.sorting {\r\n        padding-right: 30px;\r\n    }\r\n\r\n    table thead > tr > th:active,\r\n    table thead > tr > td:active {\r\n        outline: none;\r\n    }\r\n\r\n    table thead .sorting,\r\n    table thead .sorting_asc,\r\n    table thead .sorting_desc,\r\n    table thead .sorting_asc_disabled,\r\n    table thead .sorting_desc_disabled {\r\n        cursor: pointer;\r\n        position: relative;\r\n    }\r\n\r\n    table thead .sorting:before, table thead .sorting:after,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        position: absolute;\r\n        bottom: 0.9em;\r\n        display: block;\r\n        opacity: 0.3;\r\n    }\r\n\r\n    table thead .sorting:before,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:before {\r\n        right: 1em;\r\n        content: \"\\2191\";\r\n    }\r\n\r\n    table thead .sorting:after,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:after {\r\n        right: 0.5em;\r\n        content: \"\\2193\";\r\n    }\r\n\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:after {\r\n        opacity: 1;\r\n    }\r\n\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        opacity: 0;\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"tabs\">\r\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n\r\n        <div :class=\"{'card-header': card}\">\r\n            <ul :class=\"['nav','nav-' + navStyle, card? 'card-header-'+navStyle: null]\">\r\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\">\r\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                       :href=\"tab.href\"\r\n                       @click.prevent.stop=\"setTab(index)\"\r\n                       v-if=\"!tab.headHtml\"\r\n                        v-html=\"tab.title\"\r\n                    ></a>\r\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                         v-else\r\n                         v-html=\"tab.headHtml\"></div>\r\n                </li>\r\n                <slot name=\"tabs\"></slot>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import observeDom from '../utils/observe-dom';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                currentTab: this.value,\r\n                tabs: []\r\n            };\r\n        },\r\n        props: {\r\n            noFade: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            card: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            small: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            value: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            pills: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            lazy: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            bottom: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            currentTab(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\r\n                this.$emit('input', val);\r\n                this.tabs[val].$emit('click');\r\n            },\r\n            value(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.setTab(val);\r\n            },\r\n            fade(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.tabs.forEach(item => {\r\n                    this.$set(item, 'fade', val);\r\n                });\r\n            }\r\n        },\r\n        computed: {\r\n            fade() {\r\n                return !this.noFade;\r\n            },\r\n            navStyle() {\r\n                return this.pills ? 'pills' : 'tabs';\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Move to next tab\r\n             */\r\n            nextTab() {\r\n                this.setTab(this.currentTab + 1);\r\n            },\r\n\r\n            /**\r\n             * Move to previous tab\r\n             */\r\n            previousTab() {\r\n                this.setTab(this.currentTab - 1);\r\n            },\r\n\r\n            /**\r\n             * Set active tab on the tabs collection and the child 'tab' component\r\n             */\r\n            setTab(index, force) {\r\n                // Prevent setting same tab!\r\n                if (!force && index === this.currentTab) {\r\n                    return;\r\n                }\r\n\r\n                const tab = this.tabs[index];\r\n\r\n                // Don't go beyond indexes!\r\n                if (!tab) {\r\n                    return;\r\n                }\r\n\r\n                // Ignore disabled\r\n                if (tab.disabled) {\r\n                    return;\r\n                }\r\n\r\n                // Deactivate previous active tab\r\n                if (this.tabs[this.currentTab]) {\r\n                    this.$set(this.tabs[this.currentTab], 'localActive', false);\r\n                }\r\n\r\n                // Set new tab as active\r\n                this.$set(tab, 'localActive', true);\r\n\r\n                // Update currentTab\r\n                this.currentTab = index;\r\n            },\r\n\r\n            /**\r\n             * Dynamically update tabs\r\n             */\r\n            updateTabs() {\r\n                // Probe tabs\r\n                if (this.$slots.default) {\r\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\r\n                        .map(tab => tab.componentInstance);\r\n                } else {\r\n                    this.tabs = [];\r\n                }\r\n\r\n                this.tabs.forEach(tab => {\r\n                    this.$set(tab, 'fade', this.fade);\r\n                    this.$set(tab, 'lazy', this.lazy);\r\n                });\r\n\r\n                // Set initial active tab\r\n                let tabIndex = this.currentTab;\r\n\r\n                if (this.currentTab === null || this.currentTab === undefined) {\r\n                    this.tabs.forEach((tab, index) => {\r\n                        if (tab.active) {\r\n                            tabIndex = index;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Workaround to fix problem when currentTab is removed\r\n                if (tabIndex > this.tabs.length - 1) {\r\n                    tabIndex = this.tabs.length - 1;\r\n                }\r\n\r\n                this.setTab(tabIndex || 0, true);\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTabs();\r\n\r\n            // Observe Child changes so we can notify tabs change\r\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\r\n        <div role=\"tabpanel\"\r\n             class=\"tab-pane\"\r\n             :class=\"[{show, fade, disabled, active: localActive}]\"\r\n             v-if=\"localActive || !lazy\"\r\n             v-show=\"localActive || lazy\"\r\n             ref=\"panel\">\r\n             <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        methods: {\r\n            enter() {\r\n                this.show = true;\r\n            },\r\n            beforeLeave() {\r\n                this.show = false;\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                fade: false,\r\n                localActive: false,\r\n                lazy: true,\r\n                show: false\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            headHtml: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div tabindex=\"-1\" :class=\"['tooltip','tooltip-' + this.placement]\"\n             ref=\"popover\" @focus=\"$emit('focus')\" @blur=\"$emit('blur')\"\n             :style=\"{opacity:showState?1:0}\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content || title\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block !important;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import bPopover from './popover.vue';\n\n    export default {\n        extends: bPopover,\n        props: {\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('collapse::toggle', target);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('show::modal', target);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","obs","mutations","addedNodes","length","removedNodes","observe","Object","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","keys","modifiers","filter","t","all_listen_types","value","push","listener","forEach","type","log","render","data","countDownTimerId","dismissed","created","this","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","props","String","default","Boolean","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","let","dismissCountDown","setInterval","componentType","$router","to","hrefString","path","href","activeClass","exact","click","e","$root","components","bLink","items2","last","items","map","item","text","link","active","__active","Array","required","onclick","btnVariant","btnSize","btnBlock","btnDisabled","inactive","block","size","disabled","role","toolbar","vertical","thisId","id","_uid","bInputGroupAddon","left","right","blockClass","overlay","cardVariant","cardInverse","inverse","indexOf","cardAlign","align","header","showHeader","headerTag","footer","showFooter","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","prev","index","isSliding","slides","interval","indicators","controls","height","background","pause","_intervalId","start","$el","querySelectorAll","classList","add","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","remove","destroyed","clearTimeout","caption","navbar-collapse","isNav","toggle","enter","style","realHeight","getComputedStyle","offsetHeight","leave","clearHeight","$on","target","document","documentElement","_clickOutListener","removeEventListener","contains","clickOutListener","mixins","clickOut","bButton","visible","split","dropup","old","extends","itemType","tag","selected","dropdownToggle","caret","displayItem","returnObject","model","forceDefault","defaultText","result","list","position","stopPropagation","select","hub","inline","inputState","labelLayout","horizontal","labelSize","inputLayout","content","$refs","querySelector","inputSelector","label","description","feedback","inputClass","custom","plain","name","checkboxClass","custom-control","form-check-inline","formMixin","formCheckBoxMixin","prop","event","uncheckedValue","checked","formOptions","options","isArray","option","valueField","textField","selectedValue","i","localValue","old_value","formOptionsMixin","stacked","rowsCount","toString","format","formatter","formattedValue","input","onInput","lazyFormatter","onChange","onKeyUp","placeholder","rows","textarea","Function","selectedFile","dragging","selectedLabel","multiple","selectedFormat","replace","file","join","computedChooseLabel","chooseLabel","newVal","onFileChange","dataTransfer","noTraverse","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","setFiles","prototype","concat","apply","files","filesArray","match","accept","dragover","noDrop","dropEffect","drop","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","verticalAlign","rightAlign","bBtn","is_visible","body","new_val","old_val","hide","fade","closeTitle","okTitle","closeOnBackdrop","closeOnEsc","hideHeader","hideFooter","hideHeaderClose","isOK","canceled","cancel","onClickOut","onEsc","enforceFocus","focus","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","rightAlignment","class","close","open","fixed","sticky","toggleable","toggleBreakpoint","diff","showPrev","showNext","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageLinks","limit","secondaryVariant","_return","newPage","newValue","oldValue","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","attachment","targetAttachment","bottom","TETHER_CLASS_PREFIX","TRANSITION_DURATION","constraints","debounce","validator","delay","offset","test","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","RegExp","className","timeStamp","getTetherOptions","element","_popover","hidePopover","display","refreshPosition","$nextTick","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","children","popover","updated","beforeDestroy","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","bPagination","sortDesc","fields","items_key","sortCompare","itemsProvider","_items","regex","lastIndex","sort","r","slice","rowClicked","headClick","field","key","sortable","currentTab","noFade","card","small","lazy","setTab","$set","navStyle","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","tabIndex","observeDom","tabsContainer","bind","beforeLeave","localActive","headHtml","bPopover","ref","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}